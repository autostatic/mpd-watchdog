#!/bin/sh
#
# mpd-watchdog - monitor mpd while playing internet streams
#
# Copyright (c) 2013, 2015 Thomas Kemmer <tkemmer@computer.org>
#
# Based on http://mpd.wikia.com/wiki/Hack:stream-monitor
#

program="$(basename "$0")"
interval=10
loglevel=1
logger="log_stderr"
mpdhost=localhost
mpdport=6600

USAGE=$(cat <<EOF
Usage: $program [OPTION]...
Monitor mpd while playing internet streams.

  -h host       MPD server host [$mpdhost]
  -i interval   monitoring interval in seconds [$interval]
  -p port       MPD server port [$mpdport]
  -s            write log output to syslog
  -v            produce more verbose output
EOF
)

log_stderr() {
    shift
    echo "$0:" "$@" >&2
}

log_syslog() {
    loglevel="$1"
    shift
    logger -t "$program" -p "user.$loglevel" "$@"
}

log() {
    case $1 in
        alert|crit|emerg|err|error|warn|warning)
            $logger "$@"
            ;;
        notice)
            [ $loglevel -gt 0 ] && $logger "$@"
            ;;
        info)
            [ $loglevel -gt 1 ] && $logger "$@"
            ;;
        debug)
            [ $loglevel -gt 2 ] && $logger "$@"
            ;;
        *)
            echo "$0: invalid log level: $1"
            ;;
    esac
}

mpc_status() {
    $mpc status 2>/dev/null | grep -B1 '^\[playing\]' | tr '\n' ' '
}

while getopts "h::i:p:sv" opt; do
    case $opt in
        h)
            mpdhost=$OPTARG
            ;;
        i)
            interval=$OPTARG
            ;;
        p)
            mpdport=$OPTARG
            ;;
        s)
            logger="log_syslog"
            ;;
        v)
            loglevel=$(($loglevel + 1))
            ;;
        *)
            echo "$USAGE" >&2
            exit 2
            ;;
    esac
done

shift $(($OPTIND - 1))

mpc="mpc -h $mpdhost -p $mpdport"

trap 'log notice "terminating..." ; exit' INT QUIT KILL TERM

log notice "starting..."

prev_status=$(mpc_status)

while sleep $interval; do
    status=$(mpc_status)

    if [ -n "$status" ]; then
        log info "$status"
        if [ "$prev_status" = "$status" ]; then
            log warning "restarting mpd"
            $mpc stop && $mpc play || log err "error restarting mpd"
        fi
    else
        log debug "mpd not running/playing"
    fi

    prev_status="$status"
done
